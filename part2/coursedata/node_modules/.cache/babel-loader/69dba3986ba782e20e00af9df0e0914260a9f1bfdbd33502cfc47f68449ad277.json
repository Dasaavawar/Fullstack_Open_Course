{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open_Course/part2/coursedata/src/components/Course.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Course = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      name: course.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contents, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c = Course;\nconst Header = _ref2 => {\n  let {\n    name\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: name\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 13,\n    columnNumber: 7\n  }, this);\n};\n_c2 = Header;\nconst Part = _ref3 => {\n  let {\n    part,\n    exercises\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part, \" \", exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c3 = Part;\nconst Contents = _ref4 => {\n  let {\n    course\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: course.parts.map(cou => /*#__PURE__*/_jsxDEV(Part, {\n      part: cou.name,\n      exercises: cou.exercises\n    }, cou.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 34\n    }, this))\n  }, void 0, false);\n};\n_c4 = Contents;\nconst Total = _ref5 => {\n  let {\n    course\n  } = _ref5;\n  const totalexercises = course.parts.reduce((t, _ref6) => {\n    let {\n      exercises\n    } = _ref6;\n    return t + exercises;\n  }, 0);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"b\", {\n      children: [\"total of \", totalexercises, \" exercises\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c5 = Total;\nexport default Course;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Course\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"Part\");\n$RefreshReg$(_c4, \"Contents\");\n$RefreshReg$(_c5, \"Total\");","map":{"version":3,"names":["Course","_ref","course","_jsxDEV","_Fragment","children","Header","name","fileName","_jsxFileName","lineNumber","columnNumber","Contents","Total","_c","_ref2","_c2","Part","_ref3","part","exercises","_c3","_ref4","parts","map","cou","id","_c4","_ref5","totalexercises","reduce","t","_ref6","_c5","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open_Course/part2/coursedata/src/components/Course.js"],"sourcesContent":["const Course = ({course}) => {\n    return (\n      <>\n      <Header name={course.name}/>\n      <Contents course={course}/>\n      <Total course={course}/>\n      </>\n    )\n  }\n  \n  const Header = ({name}) => {\n    return (\n      <h1>{name}</h1>\n    )\n  }\n  \n  \n  const Part = ({part, exercises}) => {\n    return (\n      <>\n      <p>{part} {exercises}</p>\n      </>\n    )\n  }\n  \n  const Contents = ({course}) => {\n    return (\n      <>\n        {course.parts.map(cou => <Part key={cou.id} part={cou.name} exercises={cou.exercises}/>)}\n      </>\n    )\n  }\n\n  const Total = ({course}) => {\n    const totalexercises = course.parts.reduce((t, {exercises}) => t + exercises, 0)\n    return(\n      <>\n      <b>total of {totalexercises} exercises</b>\n      </>\n    )\n  }\n\nexport default Course"],"mappings":";;;AAAA,MAAMA,MAAM,GAAGC,IAAA,IAAc;EAAA,IAAb;IAACC;EAAM,CAAC,GAAAD,IAAA;EACpB,oBACEE,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACAF,OAAA,CAACG,MAAM;MAACC,IAAI,EAAEL,MAAM,CAACK;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC5BR,OAAA,CAACS,QAAQ;MAACV,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE,eAC3BR,OAAA,CAACU,KAAK;MAACX,MAAM,EAAEA;IAAO;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAE;EAAA,gBACrB;AAEP,CAAC;AAAAG,EAAA,GARGd,MAAM;AAUV,MAAMM,MAAM,GAAGS,KAAA,IAAY;EAAA,IAAX;IAACR;EAAI,CAAC,GAAAQ,KAAA;EACpB,oBACEZ,OAAA;IAAAE,QAAA,EAAKE;EAAI;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAEnB,CAAC;AAAAK,GAAA,GAJKV,MAAM;AAOZ,MAAMW,IAAI,GAAGC,KAAA,IAAuB;EAAA,IAAtB;IAACC,IAAI;IAAEC;EAAS,CAAC,GAAAF,KAAA;EAC7B,oBACEf,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACAF,OAAA;MAAAE,QAAA,GAAIc,IAAI,EAAC,GAAC,EAACC,SAAS;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAK,iBACtB;AAEP,CAAC;AAAAU,GAAA,GANKJ,IAAI;AAQV,MAAML,QAAQ,GAAGU,KAAA,IAAc;EAAA,IAAb;IAACpB;EAAM,CAAC,GAAAoB,KAAA;EACxB,oBACEnB,OAAA,CAAAC,SAAA;IAAAC,QAAA,EACGH,MAAM,CAACqB,KAAK,CAACC,GAAG,CAACC,GAAG,iBAAItB,OAAA,CAACc,IAAI;MAAcE,IAAI,EAAEM,GAAG,CAAClB,IAAK;MAACa,SAAS,EAAEK,GAAG,CAACL;IAAU,GAAjDK,GAAG,CAACC,EAAE;MAAAlB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAA6C;EAAC,iBACvF;AAEP,CAAC;AAAAgB,GAAA,GANKf,QAAQ;AAQd,MAAMC,KAAK,GAAGe,KAAA,IAAc;EAAA,IAAb;IAAC1B;EAAM,CAAC,GAAA0B,KAAA;EACrB,MAAMC,cAAc,GAAG3B,MAAM,CAACqB,KAAK,CAACO,MAAM,CAAC,CAACC,CAAC,EAAAC,KAAA;IAAA,IAAE;MAACZ;IAAS,CAAC,GAAAY,KAAA;IAAA,OAAKD,CAAC,GAAGX,SAAS;EAAA,GAAE,CAAC,CAAC;EAChF,oBACEjB,OAAA,CAAAC,SAAA;IAAAC,QAAA,eACAF,OAAA;MAAAE,QAAA,GAAG,WAAS,EAACwB,cAAc,EAAC,YAAU;IAAA;MAAArB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EAAI,iBACvC;AAEP,CAAC;AAAAsB,GAAA,GAPKpB,KAAK;AASb,eAAeb,MAAM;AAAA,IAAAc,EAAA,EAAAE,GAAA,EAAAK,GAAA,EAAAM,GAAA,EAAAM,GAAA;AAAAC,YAAA,CAAApB,EAAA;AAAAoB,YAAA,CAAAlB,GAAA;AAAAkB,YAAA,CAAAb,GAAA;AAAAa,YAAA,CAAAP,GAAA;AAAAO,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}