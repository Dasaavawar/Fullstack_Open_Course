{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  _s();\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const showingCountries = Array(countriesToShow.length).fill(false);\n  const [showCountry, setShowCountry] = useState(showingCountries);\n  console.log(showingCountries);\n  const handleShowCountry = index => {\n    const showedCountries = [...showCountry];\n    showedCountries[index] = !showedCountries[index];\n    setShowCountry(showedCountries);\n    console.log(index);\n  };\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 51\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showingCountries[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), showingCountries[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 37\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s(Countries, \"+e4o5sNWtkD8XETZi2WCfZTEe/Y=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","_s","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showingCountries","Array","length","fill","showCountry","setShowCountry","console","log","handleShowCountry","index","showedCountries","Country","_ref2","chosenCountry","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","Object","keys","languages","map","language","src","flags","png","alt","String","i","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const showingCountries = Array(countriesToShow.length).fill(false)\n\n    const [showCountry, setShowCountry] = useState(showingCountries)\n\n    console.log(showingCountries)\n\n    const handleShowCountry = (index) => {\n        const showedCountries = [...showCountry]\n        showedCountries[index] = !showedCountries[index]\n        setShowCountry(showedCountries)\n        console.log(index)\n      }\n    \n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]}<br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2</p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            </>\n        )\n\n    }\n\n    \n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showingCountries[i] ? 'hide' : 'show'}</button>\n            {showingCountries[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}