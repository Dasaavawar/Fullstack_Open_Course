{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const Index = countries.find(c => c.name.common === country);\n    console.log(Index.length);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: country\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"population \", Index.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 79\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 39\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = countriesToShow.map(c => /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: c.name.common\n    }, c.name.common, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 56\n    }, this));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","countries","newSearch","Country","_ref2","country","Index","find","c","name","common","console","log","length","children","fileName","_jsxFileName","lineNumber","columnNumber","population","countriesToShow","filter","toLowerCase","includes","map","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n\n    const Country = ({country, countries}) => {\n        const Index = countries.find(c => c.name.common === country)\n        console.log(Index.length)\n        return(\n            <>\n            <h2>{country}</h2>\n            <p>population {Index.population}</p>\n            </>\n        )\n\n    }\n\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map(c => <li key={c.name.common}>{c.name.common} <button>show</button></li> )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = countriesToShow.map(c => <h2 key={c.name.common}>{c.name.common}</h2>)\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":";AAAA,SAASA,QAAQ,QAAO,OAAO;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAE/B,MAAMC,SAAS,GAAGC,IAAA,IAA4B;EAAA,IAA3B;IAACC,SAAS;IAAEC;EAAS,CAAC,GAAAF,IAAA;EAErC,MAAMG,OAAO,GAAGC,KAAA,IAA0B;IAAA,IAAzB;MAACC,OAAO;MAAEJ;IAAS,CAAC,GAAAG,KAAA;IACjC,MAAME,KAAK,GAAGL,SAAS,CAACM,IAAI,CAACC,CAAC,IAAIA,CAAC,CAACC,IAAI,CAACC,MAAM,KAAKL,OAAO,CAAC;IAC5DM,OAAO,CAACC,GAAG,CAACN,KAAK,CAACO,MAAM,CAAC;IACzB,oBACIjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,gBACAlB,OAAA;QAAAkB,QAAA,EAAKT;MAAO;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAM,eAClBtB,OAAA;QAAAkB,QAAA,GAAG,aAAW,EAACR,KAAK,CAACa,UAAU;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAK;IAAA,gBACjC;EAGX,CAAC;EAED,MAAME,eAAe,GAAGlB,SAAS,KAAK,EAAE,GACxCD,SAAS,GACTA,SAAS,CAACoB,MAAM,CAAChB,OAAO,IAAIA,OAAO,CAACI,IAAI,CAACC,MAAM,CAACY,WAAW,EAAE,CAACC,QAAQ,CAACrB,SAAS,CAACoB,WAAW,EAAE,CAAC,CAAC;EAEhG,IAAIF,eAAe,CAACP,MAAM,IAAI,EAAE,IAAIO,eAAe,CAACP,MAAM,GAAG,CAAC,EAAE;IAC5D,oBACIjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,EACCM,eAAe,CAACI,GAAG,CAAChB,CAAC,iBAAIZ,OAAA;QAAAkB,QAAA,GAAyBN,CAAC,CAACC,IAAI,CAACC,MAAM,EAAC,GAAC,eAAAd,OAAA;UAAAkB,QAAA,EAAQ;QAAI;UAAAC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,QAAS;MAAA,GAApDV,CAAC,CAACC,IAAI,CAACC,MAAM;QAAAK,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAA4C;IAAE,iBAC3F;EAEX;EAEA,IAAIhB,SAAS,CAACW,MAAM,KAAK,CAAC,EAAE;IACxB,oBACIjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,EAAE;IAEF,iBAAG;EAEX;EAEA,IAAIM,eAAe,CAACP,MAAM,IAAI,EAAE,EAAE;IAC9B,oBACIjB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,EAAE;IAEF,iBAAG;EAEX;EAEA,IAAIM,eAAe,CAACP,MAAM,IAAI,CAAC,EAAE;IAC7B,MAAMY,aAAa,GAAGL,eAAe,CAACI,GAAG,CAAChB,CAAC,iBAAIZ,OAAA;MAAAkB,QAAA,EAAyBN,CAAC,CAACC,IAAI,CAACC;IAAM,GAA7BF,CAAC,CAACC,IAAI,CAACC,MAAM;MAAAK,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAsB,CAAC;IAC5F,oBACItB,OAAA,CAAAE,SAAA;MAAAgB,QAAA,eACAlB,OAAA,CAACO,OAAO;QAACE,OAAO,EAAEoB,aAAc;QAACxB,SAAS,EAAEA;MAAU;QAAAc,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA;IAAG,iBACtD;EAEX;AAEF,CAAC;AAAAQ,EAAA,GAnDG3B,SAAS;AAqDb,eAAeA,SAAS;AAAA,IAAA2B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}