{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport weatherService from '../services/weather';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false));\n  const handleShowCountry = index => {\n    setShowCountry(showCountry => {\n      const showedCountries = [...showCountry];\n      showedCountries[index] = !showedCountries[index];\n      console.log(showedCountries);\n      return showedCountries;\n    });\n  };\n  const Country = _ref2 => {\n    _s();\n    let {\n      country,\n      countries\n    } = _ref2;\n    const [weatherData, setWeatherData] = useState([]);\n    const chosenCountry = countries.find(c => c.name.common === country);\n    useEffect(() => {\n      weatherService.getOne({\n        capitalCity: chosenCountry.capital[0],\n        countryTLD: chosenCountry.tld[0]\n      }).then(weatherData => setWeatherData(weatherData));\n    }, [chosenCountry]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 52\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 45\n        }, this), \"Country code top-level domain: \", chosenCountry.tld[0].substring(1), \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 13\n      }, this), weatherData.wind.speed]\n    }, void 0, true);\n  };\n  _s(Country, \"/WBsAESNl5X9UOGQ8x5/AmmeTCo=\");\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showCountry[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 13\n        }, this), showCountry[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 32\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s2(Countries, \"XYKBjs6eHE/m4NGnb4oaSoY3Aaw=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","useEffect","weatherService","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","_s2","_s","$RefreshSig$","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showCountry","setShowCountry","Array","length","fill","handleShowCountry","index","showedCountries","console","log","Country","_ref2","weatherData","setWeatherData","chosenCountry","find","c","getOne","capitalCity","capital","countryTLD","tld","then","children","fileName","_jsxFileName","lineNumber","columnNumber","population","area","substring","Object","keys","languages","map","language","src","flags","png","alt","String","wind","speed","i","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import {useState, useEffect} from 'react'\nimport weatherService from '../services/weather'\n\nconst Countries = ({countries, newSearch}) => {\n    \n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false))\n\n    const handleShowCountry = (index) => {\n        setShowCountry(showCountry => {\n            const showedCountries = [...showCountry]\n            showedCountries[index] = !showedCountries[index]\n            console.log(showedCountries)\n            return showedCountries\n        })\n      }\n    \n    const Country = ({country, countries}) => {\n        const [weatherData, setWeatherData] = useState([])\n        \n        const chosenCountry = countries.find(c => c.name.common === country)\n        \n        useEffect(() => {\n            weatherService.getOne({capitalCity: chosenCountry.capital[0], countryTLD: chosenCountry.tld[0]})\n            .then(weatherData => setWeatherData(weatherData))\n          }, [chosenCountry])\n\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]} <br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2 <br/>\n            Country code top-level domain: {chosenCountry.tld[0].substring(1)} </p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            {weatherData.wind.speed}\n            </>\n        )\n\n    }\n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showCountry[i] ? 'hide' : 'show'}</button>\n            {showCountry[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}