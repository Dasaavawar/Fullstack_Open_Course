{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport { useState, useMemo } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  _s();\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false));\n  console.log(showingCountries);\n  const handleShowCountry = index => {\n    setShowCountry(prevCountries => {\n      const showedCountries = [...prevCountries];\n      showedCountries[index] = !showedCountries[index];\n      console.log(showCountry);\n      return showedCountries;\n    });\n  };\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 51\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showCountry[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 13\n        }, this), showCountry[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 32\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s(Countries, \"XYKBjs6eHE/m4NGnb4oaSoY3Aaw=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","useMemo","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","_s","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showCountry","setShowCountry","Array","length","fill","console","log","showingCountries","handleShowCountry","index","prevCountries","showedCountries","Country","_ref2","chosenCountry","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","Object","keys","languages","map","language","src","flags","png","alt","String","i","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState, useMemo} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false));\n\n    console.log(showingCountries)\n\n    const handleShowCountry = (index) => {\n        setShowCountry(prevCountries => {\n            const showedCountries = [...prevCountries]\n            showedCountries[index] = !showedCountries[index]\n            console.log(showCountry)\n            return showedCountries\n        })\n      }\n    \n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]}<br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2</p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            </>\n        )\n\n    }\n\n    \n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showCountry[i] ? 'hide' : 'show'}</button>\n            {showCountry[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}