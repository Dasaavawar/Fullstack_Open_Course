{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  _s();\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const [selectedCountry, setSelectedCountry] = useState(false);\n  const handleShowCountry = country => {\n    setSelectedCountry(!selectedCountry);\n    console.log(selectedCountry);\n  };\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 51\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 18,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => handleShowCountry(c.name.country),\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 79\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 39\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n_s(Countries, \"prBqcbA81UbRoiFMF4PITWrNl/o=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","_s","countries","newSearch","selectedCountry","setSelectedCountry","handleShowCountry","country","console","log","Country","_ref2","chosenCountry","find","c","name","common","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","Object","keys","languages","map","language","index","src","flags","png","alt","String","countriesToShow","filter","toLowerCase","includes","length","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n    const [selectedCountry, setSelectedCountry] = useState(false)\n\n    const handleShowCountry = (country) => {\n        setSelectedCountry(!selectedCountry)\n        console.log(selectedCountry)\n      }\n\n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]}<br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2</p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n            </>\n        )\n\n    }\n\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map(c => <li key={c.name.common}>{c.name.common} <button onClick={() => handleShowCountry(c.name.country)}>show</button></li> )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}