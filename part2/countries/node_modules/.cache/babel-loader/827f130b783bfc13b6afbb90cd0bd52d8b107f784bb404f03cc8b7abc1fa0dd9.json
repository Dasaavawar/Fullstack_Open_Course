{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst getOne = _ref => {\n  let {\n    capitalCity,\n    countryTLD\n  } = _ref;\n  const formatedTLD = countryTLD.substring(1);\n  const baseURL = `https://api.openweathermap.org/data/2.5/weather?q=${capitalCity},${formatedTLD}&APPID=${API_KEY}`;\n  const request = axios.get(baseURL);\n  return request.then(response => {\n    return response.data;\n  });\n};\nconst Countries = _ref2 => {\n  _s();\n  let {\n    countries,\n    newSearch\n  } = _ref2;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false));\n  const [weatherData, setWeatherData] = useState(null);\n  const handleShowCountry = index => {\n    setShowCountry(showCountry => {\n      const showedCountries = [...showCountry];\n      showedCountries[index] = !showedCountries[index];\n      console.log(showedCountries);\n      return showedCountries;\n    });\n  };\n  const Country = _ref3 => {\n    let {\n      country,\n      countries\n    } = _ref3;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 52\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 45\n        }, this), \"Country code top-level domain: \", chosenCountry.tld, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), console.log('hola')]\n    }, void 0, true);\n  };\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showCountry[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), showCountry[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 32\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s(Countries, \"JvW99zL/5aTh97nHlJXax/J3V10=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","process","env","REACT_APP_API_KEY","getOne","_ref","capitalCity","countryTLD","formatedTLD","substring","baseURL","request","get","then","response","data","Countries","_ref2","_s","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showCountry","setShowCountry","Array","length","fill","weatherData","setWeatherData","handleShowCountry","index","showedCountries","console","log","Country","_ref3","chosenCountry","find","c","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","tld","Object","keys","languages","map","language","src","flags","png","alt","String","i","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import {useState, useEffect} from 'react'\n\nimport axios from 'axios'\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nconst getOne = ({capitalCity, countryTLD}) => {\n  const formatedTLD = countryTLD.substring(1);\n  const baseURL = (`https://api.openweathermap.org/data/2.5/weather?q=${capitalCity},${formatedTLD}&APPID=${API_KEY}`)\n    const request = axios.get(baseURL)\n    return request.then(response => {\n      return response.data\n    })\n  }\n\nconst Countries = ({countries, newSearch}) => {\n    \n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false))\n    const [weatherData, setWeatherData] = useState(null)\n\n    const handleShowCountry = (index) => {\n        setShowCountry(showCountry => {\n            const showedCountries = [...showCountry]\n            showedCountries[index] = !showedCountries[index]\n            console.log(showedCountries)\n            return showedCountries\n        })\n      }\n    \n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]} <br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2 <br/>\n            Country code top-level domain: {chosenCountry.tld} </p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            {console.log('hola')}\n            </>\n        )\n\n    }\n\n    \n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showCountry[i] ? 'hide' : 'show'}</button>\n            {showCountry[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}