{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_API_KEY;\nconst getOne = _ref => {\n  let {\n    capitalCity,\n    countryTLD\n  } = _ref;\n  const formatedTLD = String(countryTLD).substring(1);\n  const formatedCapital = String(capitalCity);\n  const baseURL = `https://api.openweathermap.org/data/2.5/weather?q=${capitalCity},${formatedTLD}&APPID=${API_KEY}`;\n  const request = axios.get(baseURL);\n  return request.then(response => {\n    return response.data;\n  });\n};\nconst Countries = _ref2 => {\n  _s2();\n  var _s = $RefreshSig$();\n  let {\n    countries,\n    newSearch\n  } = _ref2;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false));\n  const handleShowCountry = index => {\n    setShowCountry(showCountry => {\n      const showedCountries = [...showCountry];\n      showedCountries[index] = !showedCountries[index];\n      console.log(showedCountries);\n      return showedCountries;\n    });\n  };\n  const Country = _ref3 => {\n    _s();\n    let {\n      country,\n      countries\n    } = _ref3;\n    const [weatherData, setWeatherData] = useState(null);\n    const chosenCountry = countries.find(c => c.name.common === country);\n    useEffect(() => {\n      getOne({\n        capitalCity: chosenCountry.capital[0],\n        countryTLD: chosenCountry.tld\n      }).then(data => setWeatherData(data)).catch(error => console.log(error));\n    }, [chosenCountry]);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 52\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 45\n        }, this), \"Country code top-level domain: \", chosenCountry.tld, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this), console.log('hola')]\n    }, void 0, true);\n  };\n  _s(Country, \"BCUo9muHyxrqajg6diFxqqqjG/A=\");\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showCountry[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 13\n        }, this), showCountry[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 32\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s2(Countries, \"XYKBjs6eHE/m4NGnb4oaSoY3Aaw=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","useEffect","axios","jsxDEV","_jsxDEV","Fragment","_Fragment","API_KEY","process","env","REACT_APP_API_KEY","getOne","_ref","capitalCity","countryTLD","formatedTLD","String","substring","formatedCapital","baseURL","request","get","then","response","data","Countries","_ref2","_s2","_s","$RefreshSig$","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showCountry","setShowCountry","Array","length","fill","handleShowCountry","index","showedCountries","console","log","Country","_ref3","weatherData","setWeatherData","chosenCountry","find","c","capital","tld","catch","error","children","fileName","_jsxFileName","lineNumber","columnNumber","population","area","Object","keys","languages","map","language","src","flags","png","alt","i","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import {useState, useEffect} from 'react'\n\nimport axios from 'axios'\n\nconst API_KEY = process.env.REACT_APP_API_KEY\n\nconst getOne = ({capitalCity, countryTLD}) => {\n  const formatedTLD = String(countryTLD).substring(1)\n  const formatedCapital = String(capitalCity)\n  const baseURL = (`https://api.openweathermap.org/data/2.5/weather?q=${capitalCity},${formatedTLD}&APPID=${API_KEY}`)\n    const request = axios.get(baseURL)\n    return request.then(response => {\n      return response.data\n    })\n  }\n\nconst Countries = ({countries, newSearch}) => {\n    \n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const [showCountry, setShowCountry] = useState(Array(countriesToShow.length).fill(false))\n\n    const handleShowCountry = (index) => {\n        setShowCountry(showCountry => {\n            const showedCountries = [...showCountry]\n            showedCountries[index] = !showedCountries[index]\n            console.log(showedCountries)\n            return showedCountries\n        })\n      }\n    \n    const Country = ({country, countries}) => {\n        const [weatherData, setWeatherData] = useState(null)\n        \n        const chosenCountry = countries.find(c => c.name.common === country)\n        \n        useEffect(() => {\n            getOne({capitalCity: chosenCountry.capital[0], countryTLD: chosenCountry.tld})\n              .then(data => setWeatherData(data))\n              .catch(error => console.log(error))\n          }, [chosenCountry])\n\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]} <br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2 <br/>\n            Country code top-level domain: {chosenCountry.tld} </p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            {console.log('hola')}\n            </>\n        )\n\n    }\n\n    \n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showCountry[i] ? 'hide' : 'show'}</button>\n            {showCountry[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}