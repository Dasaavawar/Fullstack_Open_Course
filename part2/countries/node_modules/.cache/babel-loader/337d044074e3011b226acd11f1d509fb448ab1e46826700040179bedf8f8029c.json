{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  _s();\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  const showingCountries = Array(countriesToShow.length).fill(false);\n  const [showCountry, setShowCountry] = useState(showingCountries);\n  console.log(showingCountries);\n  const handleShowCountry = index => {\n    setShowCountry(showCountry.map((c, i) => {\n      if (i == index) {\n        return true;\n      } else {\n        return false;\n      }\n    }));\n    console.log(index);\n  };\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"Capital: \", chosenCountry.capital[0], /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 51\n        }, this), \"Population: \", chosenCountry.population, \" people \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 59\n        }, this), \"Area: \", chosenCountry.area, \" Km^2\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"b\", {\n        children: \"Languages:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n        children: Object.keys(chosenCountry.languages).map((language, index) => /*#__PURE__*/_jsxDEV(\"li\", {\n          children: chosenCountry.languages[language]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 17\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: chosenCountry.flags.png,\n        alt: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: String(chosenCountry.flags.png)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: [\"Weather in \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map((c, i) => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => {\n            handleShowCountry(i);\n          },\n          children: showingCountries[i] ? 'hide' : 'show'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this), showingCountries[i] && /*#__PURE__*/_jsxDEV(Country, {\n          country: c.name.common,\n          countries: countries\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 37\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 43\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 0) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"No country was found, please try again\"\n    }, void 0, false);\n  }\n};\n_s(Countries, \"+e4o5sNWtkD8XETZi2WCfZTEe/Y=\");\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","_s","countries","newSearch","countriesToShow","filter","country","name","common","toLowerCase","includes","showingCountries","Array","length","fill","showCountry","setShowCountry","console","log","handleShowCountry","index","map","c","i","Country","_ref2","chosenCountry","find","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","Object","keys","languages","language","src","flags","png","alt","String","onClick","choiceCountry","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    const showingCountries = Array(countriesToShow.length).fill(false)\n\n    const [showCountry, setShowCountry] = useState(showingCountries)\n\n    console.log(showingCountries)\n\n    const handleShowCountry = (index) => {\n        setShowCountry(showCountry.map((c,i) => {\n            if (i == index) {\n                return true\n            } else {\n                return false\n            }\n        }))\n        console.log(index)\n      }\n    \n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            \n            <p>Capital: {chosenCountry.capital[0]}<br/>\n            Population: {chosenCountry.population} people <br/>\n            Area: {chosenCountry.area} Km^2</p>\n            \n            <b>Languages:</b>\n            <ul>\n                {Object.keys(chosenCountry.languages).map((language, index) => (\n                <li key={index}>{chosenCountry.languages[language]}</li>\n                ))}\n            </ul>\n            \n            <img src={chosenCountry.flags.png} alt={chosenCountry.name.common}></img>\n            <p>{String(chosenCountry.flags.png)}</p>\n\n            <h3>Weather in {chosenCountry.capital[0]}</h3>\n            </>\n        )\n\n    }\n\n    \n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map((c,i) => <li key={c.name.common}>{c.name.common}\n            <button onClick={() => {handleShowCountry(i)}}>{showingCountries[i] ? 'hide' : 'show'}</button>\n            {showingCountries[i] && <Country country={c.name.common} countries={countries}/>}\n            </li>\n            )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 0) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            No country was found, please try again\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}