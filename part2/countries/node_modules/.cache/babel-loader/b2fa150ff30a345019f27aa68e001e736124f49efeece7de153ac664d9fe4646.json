{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js\";\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Countries = _ref => {\n  let {\n    countries,\n    newSearch\n  } = _ref;\n  const Country = _ref2 => {\n    let {\n      country,\n      countries\n    } = _ref2;\n    const chosenCountry = countries.find(c => c.name.common === country);\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: chosenCountry.name.common\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"h1\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"capital \", chosenCountry.capital[0]]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 11,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"population \", chosenCountry.population]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"area \", chosenCountry.area]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 14,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true);\n  };\n  const countriesToShow = newSearch === '' ? countries : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()));\n  if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: countriesToShow.map(c => /*#__PURE__*/_jsxDEV(\"li\", {\n        children: [c.name.common, \" \", /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"show\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 79\n        }, this)]\n      }, c.name.common, true, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 39\n      }, this))\n    }, void 0, false);\n  }\n  if (newSearch.length === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Please introduce a character in the search bar\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length >= 10) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: \"Too many matches, specify another filter\"\n    }, void 0, false);\n  }\n  if (countriesToShow.length == 1) {\n    const choiceCountry = String(countriesToShow.map(c => c.name.common));\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Country, {\n        country: choiceCountry,\n        countries: countries\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 13\n      }, this)\n    }, void 0, false);\n  }\n};\n_c = Countries;\nexport default Countries;\nvar _c;\n$RefreshReg$(_c, \"Countries\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Countries","_ref","countries","newSearch","Country","_ref2","country","chosenCountry","find","c","name","common","children","fileName","_jsxFileName","lineNumber","columnNumber","capital","population","area","countriesToShow","filter","toLowerCase","includes","length","map","choiceCountry","String","_c","$RefreshReg$"],"sources":["/home/cogito/Desktop/FSO/part2/restcountries/src/components/Countries.js"],"sourcesContent":["import { useState} from 'react'\n\nconst Countries = ({countries, newSearch}) => {\n\n    const Country = ({country, countries}) => {\n        const chosenCountry = countries.find(c => c.name.common === country)\n        return(\n            <>\n            <h2>{chosenCountry.name.common}</h2>\n            <h1></h1>\n            <p>capital {chosenCountry.capital[0]}</p>\n            <p>population {chosenCountry.population}</p>\n            <p>area {chosenCountry.area}</p>\n            <p></p>\n            \n            </>\n        )\n\n    }\n\n    const countriesToShow = newSearch === ''\n  ? countries\n  : countries.filter(country => country.name.common.toLowerCase().includes(newSearch.toLowerCase()))\n\n    if (countriesToShow.length <= 10 && countriesToShow.length > 1) {\n        return(\n            <>\n            {countriesToShow.map(c => <li key={c.name.common}>{c.name.common} <button>show</button></li> )}\n            </>\n        )\n    }\n\n    if (newSearch.length === 0) {\n        return(\n            <>\n            Please introduce a character in the search bar\n            </>\n        )\n    }\n\n    if (countriesToShow.length >= 10) {\n        return(\n            <>\n            Too many matches, specify another filter\n            </>\n        )\n    }\n\n    if (countriesToShow.length == 1) {\n        const choiceCountry = String(countriesToShow.map(c => c.name.common))\n        return(\n            <>\n            <Country country={choiceCountry} countries={countries} />\n            </>\n        )\n    }\n    \n  }\n  \n  export default Countries"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}