{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FULLSTACKOPEN HELSINKI/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Content = _ref2 => {\n  let {\n    parts\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map(part => /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part.name, \" \", part.exercises]\n    }, part.name, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c2 = Content;\nconst Total = _ref3 => {\n  let {\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", parts[0].exercises + parts[1].exercises + parts[2].exercises]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_c3 = Total;\nconst App = () => {\n  const course = {\n    title: 'Half Stack application development'\n  };\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", parts.reduce((sum, part) => sum + part.exercises, 0)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n};\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Content\");\n$RefreshReg$(_c3, \"Total\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["Header","_ref","course","_jsxDEV","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","Content","_ref2","parts","_Fragment","map","part","name","exercises","_c2","Total","_ref3","_c3","App","reduce","sum","_c4","$RefreshReg$"],"sources":["/home/cogito/Desktop/FULLSTACKOPEN HELSINKI/part1/src/App.js"],"sourcesContent":["const Header = ({ course }) => {\n  return (\n    <h1>{course.title}</h1>\n  )\n}\n\nconst Content = ({ parts }) => {\n  return (\n    <>\n    {parts.map(part =>\n        <p key={part.name}>\n          {part.name} {part.exercises}\n        </p>\n      )}\n    </>\n    )\n}\n\nconst Total = ({ parts }) => {\n  return (\n    <p>Number of exercises {parts[0].exercises + parts[1].exercises + parts[2].exercises}</p>\n  )\n}\n\nconst App = () => {\n  const course = {title: 'Half Stack application development'};\n  const parts = [\n    {name: 'Fundamentals of React', exercises: 10},\n    {name: 'Using props to pass data', exercises: 7},\n    {name: 'State of a component', exercises: 14}\n  ];\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={parts} />\n\n      <p>Number of exercises {parts.reduce((sum, part) => sum + part.exercises, 0)}</p>\n    </div>\n  )\n}\n\n\nexport default App"],"mappings":";;;AAAA,MAAMA,MAAM,GAAGC,IAAA,IAAgB;EAAA,IAAf;IAAEC;EAAO,CAAC,GAAAD,IAAA;EACxB,oBACEE,OAAA;IAAAC,QAAA,EAAKF,MAAM,CAACG;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAM;AAE3B,CAAC;AAAAC,EAAA,GAJKV,MAAM;AAMZ,MAAMW,OAAO,GAAGC,KAAA,IAAe;EAAA,IAAd;IAAEC;EAAM,CAAC,GAAAD,KAAA;EACxB,oBACET,OAAA,CAAAW,SAAA;IAAAV,QAAA,EACCS,KAAK,CAACE,GAAG,CAACC,IAAI,iBACXb,OAAA;MAAAC,QAAA,GACGY,IAAI,CAACC,IAAI,EAAC,GAAC,EAACD,IAAI,CAACE,SAAS;IAAA,GADrBF,IAAI,CAACC,IAAI;MAAAX,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAEb;EACL,iBACA;AAEP,CAAC;AAAAU,GAAA,GAVKR,OAAO;AAYb,MAAMS,KAAK,GAAGC,KAAA,IAAe;EAAA,IAAd;IAAER;EAAM,CAAC,GAAAQ,KAAA;EACtB,oBACElB,OAAA;IAAAC,QAAA,GAAG,sBAAoB,EAACS,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,GAAGL,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS,GAAGL,KAAK,CAAC,CAAC,CAAC,CAACK,SAAS;EAAA;IAAAZ,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAAK;AAE7F,CAAC;AAAAa,GAAA,GAJKF,KAAK;AAMX,MAAMG,GAAG,GAAGA,CAAA,KAAM;EAChB,MAAMrB,MAAM,GAAG;IAACG,KAAK,EAAE;EAAoC,CAAC;EAC5D,MAAMQ,KAAK,GAAG,CACZ;IAACI,IAAI,EAAE,uBAAuB;IAAEC,SAAS,EAAE;EAAE,CAAC,EAC9C;IAACD,IAAI,EAAE,0BAA0B;IAAEC,SAAS,EAAE;EAAC,CAAC,EAChD;IAACD,IAAI,EAAE,sBAAsB;IAAEC,SAAS,EAAE;EAAE,CAAC,CAC9C;EAED,oBACEf,OAAA;IAAAC,QAAA,gBACED,OAAA,CAACH,MAAM;MAACE,MAAM,EAAEA;IAAO;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAC1BN,OAAA,CAACQ,OAAO;MAACE,KAAK,EAAEA;IAAM;MAAAP,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAG,eAEzBN,OAAA;MAAAC,QAAA,GAAG,sBAAoB,EAACS,KAAK,CAACW,MAAM,CAAC,CAACC,GAAG,EAAET,IAAI,KAAKS,GAAG,GAAGT,IAAI,CAACE,SAAS,EAAE,CAAC,CAAC;IAAA;MAAAZ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QAAK;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,QAC7E;AAEV,CAAC;AAAAiB,GAAA,GAhBKH,GAAG;AAmBT,eAAeA,GAAG;AAAA,IAAAb,EAAA,EAAAS,GAAA,EAAAG,GAAA,EAAAI,GAAA;AAAAC,YAAA,CAAAjB,EAAA;AAAAiB,YAAA,CAAAR,GAAA;AAAAQ,YAAA,CAAAL,GAAA;AAAAK,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}