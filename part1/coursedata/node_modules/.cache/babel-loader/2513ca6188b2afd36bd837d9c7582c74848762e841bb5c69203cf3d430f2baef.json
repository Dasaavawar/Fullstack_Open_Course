{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/FULLSTACKOPEN HELSINKI/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"h1\", {\n    children: course.title\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 3,\n    columnNumber: 5\n  }, this);\n};\n_c = Header;\nconst Part = _ref2 => {\n  let {\n    name,\n    exercises\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [name, \" \", exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c2 = Part;\nconst Content = _ref3 => {\n  let {\n    parts\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: parts.map(part => /*#__PURE__*/_jsxDEV(Part, {\n      name: part.name,\n      exercises: part.exercises\n    }, part.name, false, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 9\n    }, this))\n  }, void 0, false);\n};\n_c3 = Content;\nconst Total = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"Number of exercises \", parts.reduce((sum, part) => sum + part.exercises, 0)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_c4 = Total;\nconst App = () => {\n  const course = {\n    title: 'Half Stack application development'\n  };\n  const parts = [{\n    name: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    name: 'Using props to pass data',\n    exercises: 7\n  }, {\n    name: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Content, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Content\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["Header","_ref","course","_jsxDEV","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","Part","_ref2","name","exercises","_Fragment","_c2","Content","_ref3","parts","map","part","_c3","Total","_ref4","reduce","sum","_c4","App","_c5","$RefreshReg$"],"sources":["/home/cogito/Desktop/FULLSTACKOPEN HELSINKI/part1/src/App.js"],"sourcesContent":["const Header = ({ course }) => {\n  return (\n    <h1>{course.title}</h1>\n  )\n}\n\nconst Part = ({name, exercises}) => {\n  return (\n    <>\n    <p>{name} {exercises}</p>\n    </>\n  )\n}\n\nconst Content = ({ parts }) => {\n  return (\n    <>\n    {parts.map((part) => (\n        <Part key={part.name} name={part.name} exercises={part.exercises} />\n      ))}\n    </>\n    )\n}\n\nconst Total = ({ parts }) => {\n  return (\n    <p>Number of exercises {parts.reduce((sum, part) => sum + part.exercises, 0)}</p>\n  )\n}\n\nconst App = () => {\n  const course = {title: 'Half Stack application development'};\n  const parts = [\n    {name: 'Fundamentals of React', exercises: 10},\n    {name: 'Using props to pass data', exercises: 7},\n    {name: 'State of a component', exercises: 14}\n  ];\n\n  return (\n    <div>\n      <Header course={course} />\n      <Content parts={parts} />\n      <Total parts={parts} />\n    </div>\n  )\n}\n\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}