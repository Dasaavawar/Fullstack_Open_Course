{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open/unicafe/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleClicks,\n    choice\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    onClick: handleClicks[choice],\n    children: choice.toLowerCase()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value,\n    add\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"tr\", {\n      children: /*#__PURE__*/_jsxDEV(\"td\", {\n        children: [text, \" \", value, \" \", add]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 5\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  if (good + neutral + bad === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  const total = good + neutral + bad;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"table\", {\n      children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"statistics\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 14\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n        children: [/*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"good\",\n          value: good,\n          add: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"neutral\",\n          value: neutral,\n          add: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"bad\",\n          value: bad,\n          add: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"all\",\n          value: total,\n          add: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"average\",\n          value: (good - bad) / total,\n          add: \"\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n          text: \"positive\",\n          value: good * 100 / total,\n          add: \"%\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 7\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleClicks = {\n    Good: () => setGood(good + 1),\n    Neutral: () => setNeutral(neutral + 1),\n    Bad: () => setBad(bad + 1)\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClicks: handleClicks,\n      choice: \"Good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClicks: handleClicks,\n      choice: \"Neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleClicks: handleClicks,\n      choice: \"Bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_ref","handleClicks","choice","onClick","children","toLowerCase","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref2","text","value","add","_c2","Statistics","_ref3","good","neutral","bad","total","_c3","App","_s","setGood","setNeutral","setBad","Good","Neutral","Bad","_c4","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open/unicafe/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleClicks, choice}) => {\n  return (\n    <button onClick={handleClicks[choice]}>\n    {choice.toLowerCase()}\n  </button>\n  )\n}\n\nconst StatisticLine = ({text, value, add}) => {\n  return (\n    <>\n    <tr>\n    <td>{text} {value} {add}</td>\n    </tr>\n    </>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good + neutral + bad === 0) {\n    return (\n      <>\n      <h1>statistics</h1>\n      <p>No feedback given</p>\n      </>\n    )\n  }\n\n  const total = good + neutral + bad\n\n  return(\n    <>\n    \n    <table>\n      <thead><h1>statistics</h1></thead>\n      <tbody>\n      <StatisticLine text='good' value={good} add=''/>\n      <StatisticLine text='neutral' value={neutral} add=''/>\n      <StatisticLine text='bad' value={bad} add=''/>\n      <StatisticLine text='all' value={total} add=''/>\n      <StatisticLine text='average' value={(good-bad)/(total)} add=''/>\n      <StatisticLine text='positive' value={(good * 100)/(total)} add='%'/>\n      </tbody>\n    </table>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleClicks = {\n    Good: () => setGood(good + 1),\n    Neutral: () => setNeutral(neutral + 1),\n    Bad: () => setBad(bad + 1),\n  };\n\n  return (\n    <>\n      <h1>give feedback</h1>\n      <Button handleClicks={handleClicks} choice='Good'/>\n      <Button handleClicks={handleClicks} choice='Neutral'/>\n      <Button handleClicks={handleClicks} choice='Bad'/>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}