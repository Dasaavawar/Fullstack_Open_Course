{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = _ref => {\n  let {\n    handleGoodClick,\n    handleNeutralClick,\n    handleBadClick\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c = Button;\nconst StatisticLine = _ref2 => {\n  let {\n    text,\n    value,\n    add\n  } = _ref2;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [text, \" \", value, \" \", add, \" \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 26\n    }, this)]\n  }, void 0, true);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref3 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref3;\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"No feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good,\n      add: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral,\n      add: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad,\n      add: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: good + neutral + bad,\n      add: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (good - bad) / (good + bad + neutral),\n      add: \"\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: good * 100 / (good + bad + neutral),\n      add: \"%\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleClicks = {\n    handleGoodClick: () => {\n      setGood(good + 1);\n    },\n    handleNeutralClick: () => {\n      setNeutral(neutral + 1);\n    },\n    handleBadClick: () => {\n      setBad(bad + 1);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(Button, {\n      handleGoodClick: handleGoodClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","_ref","handleGoodClick","handleNeutralClick","handleBadClick","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref2","text","value","add","_c2","Statistics","_ref3","good","neutral","bad","_c3","App","_s","setGood","setNeutral","setBad","handleClicks","_c4","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = ({handleGoodClick, handleNeutralClick, handleBadClick }) => {\n  return (\n    <>\n    <button onClick={handleGoodClick}>good</button>\n    </>\n  )\n}\n\nconst StatisticLine = ({text, value, add}) => {\n  return (\n    <>\n    {text} {value} {add} <br  />\n    </>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return (\n      <>\n      <h1>statistics</h1>\n      <p>No feedback given</p>\n      </>\n    )\n  }\n\n  return(\n    <>\n    <h1>statistics</h1>\n    <StatisticLine text='good' value={good} add=''/>\n    <StatisticLine text='neutral' value={neutral} add=''/>\n    <StatisticLine text='bad' value={bad} add=''/>\n    <StatisticLine text='all' value={good+neutral+bad} add=''/>\n    <StatisticLine text='average' value={(good-bad)/(good+bad+neutral)} add=''/>\n    <StatisticLine text='positive' value={(good * 100)/(good+bad+neutral)} add='%'/>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleClicks = {\n  handleGoodClick: () => {setGood(good + 1)},\n  handleNeutralClick: () => {setNeutral(neutral+ 1)},\n  handleBadClick: () => {setBad(bad + 1)}\n  }\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGoodClick}>good</button><button onClick={handleNeutralClick}>neutral</button><button onClick={handleBadClick}>bad</button>\n      <Button handleGoodClick={handleGoodClick} />\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}