{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Button = () => {\n  return /*#__PURE__*/_jsxDEV(\"button\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 5\n  }, this);\n};\n_c = Button;\nconst StatisticLine = _ref => {\n  let {\n    text,\n    value\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [text, \" \", value]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 5\n  }, this);\n};\n_c2 = StatisticLine;\nconst Statistics = _ref2 => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref2;\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"statistics\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"no feedback given\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"good\",\n      value: good\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"neutral\",\n      value: neutral\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"bad\",\n      value: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"all\",\n      value: good + neutral + bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"average\",\n      value: (good - bad) / (good + bad + neutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(StatisticLine, {\n      text: \"positive\",\n      value: good * 100 / (good + bad + neutral)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c4 = App;\nexport default App;\nvar _c, _c2, _c3, _c4;\n$RefreshReg$(_c, \"Button\");\n$RefreshReg$(_c2, \"StatisticLine\");\n$RefreshReg$(_c3, \"Statistics\");\n$RefreshReg$(_c4, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Button","fileName","_jsxFileName","lineNumber","columnNumber","_c","StatisticLine","_ref","text","value","children","_c2","Statistics","_ref2","good","neutral","bad","_c3","App","_s","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","onClick","_c4","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Button = () => {\n  return (\n    <button></button>\n  )\n}\n\nconst StatisticLine = ({text, value}) => {\n  return (\n    <p>{text} {value}</p>\n  )\n}\n\nconst Statistics = ({good, neutral, bad}) => {\n  if (good === 0 && neutral === 0 && bad === 0) {\n    return (\n      <>\n      <h1>statistics</h1>\n      <p>no feedback given</p>\n      </>\n    )\n  }\n\n  return(\n    <>\n    <h1>statistics</h1>\n    <StatisticLine text='good' value={good}/>\n    <StatisticLine text='neutral' value={neutral}/>\n    <StatisticLine text='bad' value={bad}/>\n    <StatisticLine text='all' value={good+neutral+bad}/>\n    <StatisticLine text='average' value={(good-bad)/(good+bad+neutral)}/>\n    <StatisticLine text='positive' value={(good * 100)/(good+bad+neutral)}/>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {setGood(good + 1)}\n  const handleNeutralClick = () => {setNeutral(neutral+ 1)}\n  const handleBadClick = () => {setBad(bad + 1)}\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGoodClick}>good</button><button onClick={handleNeutralClick}>neutral</button><button onClick={handleBadClick}>bad</button>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}