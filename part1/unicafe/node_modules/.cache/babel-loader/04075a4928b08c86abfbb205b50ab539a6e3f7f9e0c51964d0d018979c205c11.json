{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Statistics = (props, _ref) => {\n  let {\n    good,\n    neutral,\n    bad\n  } = _ref;\n  if (props.allClicks.length === 0) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"the app is used by pressing the buttons\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 13\n    }, this);\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"statistics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"good \", good]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"neutral \", neutral]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"bad \", bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"all \", good + neutral + bad]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"average \", (good - bad) / (good + bad + neutral)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 5\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"positive \", good * 100 / (good + bad + neutral), \" %\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }, this)]\n  }, void 0, true);\n};\n_c = Statistics;\nconst App = () => {\n  _s();\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n  const handleGoodClick = () => {\n    setGood(good + 1);\n  };\n  const handleNeutralClick = () => {\n    setNeutral(neutral + 1);\n  };\n  const handleBadClick = () => {\n    setBad(bad + 1);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"give feedback\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleGoodClick,\n      children: \"good\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleNeutralClick,\n      children: \"neutral\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 54\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: handleBadClick,\n      children: \"bad\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 107\n    }, this), /*#__PURE__*/_jsxDEV(Statistics, {\n      good: good,\n      neutral: neutral,\n      bad: bad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"eScCFcZxMV7EVTyq8/QmtvFilbs=\");\n_c2 = App;\nexport default App;\nvar _c, _c2;\n$RefreshReg$(_c, \"Statistics\");\n$RefreshReg$(_c2, \"App\");","map":{"version":3,"names":["useState","jsxDEV","_jsxDEV","Fragment","_Fragment","Statistics","props","_ref","good","neutral","bad","allClicks","length","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","App","_s","setGood","setNeutral","setBad","handleGoodClick","handleNeutralClick","handleBadClick","onClick","_c2","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open/tut1/src/App.js"],"sourcesContent":["import { useState } from 'react'\n\nconst Statistics = (props, {good, neutral, bad}) => {\n  if (props.allClicks.length === 0) {\n    return (<div>the app is used by pressing the buttons</div>\n    )\n  }\n\n  return(\n    <>\n    <h1>statistics</h1>\n    <p>good {good}</p>\n    <p>neutral {neutral}</p>\n    <p>bad {bad}</p>\n    <p>all {good+neutral+bad}</p>\n    <p>average {(good-bad)/(good+bad+neutral)}</p>\n    <p>positive {(good * 100)/(good+bad+neutral)} %</p>\n    </>\n  )\n}\n\nconst App = () => {\n  // save clicks of each button to its own state\n  const [good, setGood] = useState(0)\n  const [neutral, setNeutral] = useState(0)\n  const [bad, setBad] = useState(0)\n\n  const handleGoodClick = () => {setGood(good + 1)}\n  const handleNeutralClick = () => {setNeutral(neutral+ 1)}\n  const handleBadClick = () => {setBad(bad + 1)}\n\n  return (\n    <div>\n      <h1>give feedback</h1>\n      <button onClick={handleGoodClick}>good</button><button onClick={handleNeutralClick}>neutral</button><button onClick={handleBadClick}>bad</button>\n      <Statistics good={good} neutral={neutral} bad={bad}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}