{"ast":null,"code":"var _jsxFileName = \"/home/cogito/Desktop/Fullstack_Open/part1/src/App.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Header = _ref => {\n  let {\n    course\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: course.title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 4,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_c = Header;\nconst Part = (_ref2, _ref3) => {\n  let {\n    part\n  } = _ref2;\n  let {\n    exercise\n  } = _ref3;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [part, \" \", exercise]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c2 = Part;\nconst Contents = _ref4 => {\n  let {\n    parts\n  } = _ref4;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Part, {\n        part: parts[0].part,\n        exercise: parts[0].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Part, {\n        part: parts[1].part,\n        exercise: parts[1].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: /*#__PURE__*/_jsxDEV(Part, {\n        part: parts[2].part,\n        exercise: parts[2].exercises\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_c3 = Contents;\nconst Total = _ref5 => {\n  let {\n    parts\n  } = _ref5;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Number of exercises \", parts[0].exercises + parts[1].exercises + parts[2].exercises]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_c4 = Total;\nconst App = () => {\n  const course = {\n    title: 'Half Stack application development'\n  };\n  const parts = [{\n    part: 'Fundamentals of React',\n    exercises: 10\n  }, {\n    part: 'Using props to pass data',\n    exercises: 7\n  }, {\n    part: 'State of a component',\n    exercises: 14\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      course: course\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Contents, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Total, {\n      parts: parts\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n};\n_c5 = App;\nexport default App;\nvar _c, _c2, _c3, _c4, _c5;\n$RefreshReg$(_c, \"Header\");\n$RefreshReg$(_c2, \"Part\");\n$RefreshReg$(_c3, \"Contents\");\n$RefreshReg$(_c4, \"Total\");\n$RefreshReg$(_c5, \"App\");","map":{"version":3,"names":["Header","_ref","course","_jsxDEV","_Fragment","children","title","fileName","_jsxFileName","lineNumber","columnNumber","_c","Part","_ref2","_ref3","part","exercise","_c2","Contents","_ref4","parts","exercises","_c3","Total","_ref5","_c4","App","_c5","$RefreshReg$"],"sources":["/home/cogito/Desktop/Fullstack_Open/part1/src/App.js"],"sourcesContent":["const Header = ({course}) => {\n  return (\n    <>\n      <h1>{course.title}</h1>\n    </>\n  )\n}\n\nconst Part = ({part}, {exercise}) => {\n  return (\n    <>\n    <p>{part} {exercise}</p>\n    </>\n  )\n}\n\nconst Contents = ({parts}) => {\n  return (\n    <>\n      <p>\n        <Part part={parts[0].part} exercise={parts[0].exercises}/>\n      </p>\n      <p>\n      <Part part={parts[1].part} exercise={parts[1].exercises}/>\n      </p>\n      <p>\n      <Part part={parts[2].part} exercise={parts[2].exercises}/>\n      </p>\n    </>\n  )\n}\n\nconst Total = ({parts}) => {\n  return (\n    <>\n    <p>Number of exercises {parts[0].exercises + parts[1].exercises + parts[2].exercises}</p>\n    </>\n  )\n}\n\n\nconst App = () => {\n  const course = {title: 'Half Stack application development'}\n  const parts = [{part: 'Fundamentals of React', exercises: 10},\n  {part: 'Using props to pass data', exercises: 7},\n  {part: 'State of a component', exercises: 14}]\n\n  return (\n    <div>\n      <Header course={course}/>\n      <Contents parts={parts}/>\n      <Total parts={parts}/>\n    </div>\n  )\n}\n\nexport default App"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}